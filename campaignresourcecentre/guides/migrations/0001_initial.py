# Generated by Django 3.1.8 on 2021-05-12 11:22

from django.db import migrations, models
import django.db.models.deletion
import wagtail.core.blocks
import wagtail.core.fields
import wagtail.images.blocks


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("wagtailcore", "0060_fix_workflow_unique_constraint"),
        ("images", "0002_customimage_file_hash"),
    ]

    operations = [
        migrations.CreateModel(
            name="GuidePage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                ("social_text", models.CharField(blank=True, max_length=255)),
                (
                    "listing_title",
                    models.CharField(
                        blank=True,
                        help_text="Override the page title used when this page appears in listings",
                        max_length=255,
                    ),
                ),
                (
                    "listing_summary",
                    models.CharField(
                        blank=True,
                        help_text="The text summary used when this page appears in listings. It's also used as the description for search engines if the 'Meta description' field above is not defined.",
                        max_length=255,
                    ),
                ),
                ("introduction", models.TextField(blank=True)),
                (
                    "body",
                    wagtail.core.fields.StreamField(
                        [
                            ("paragraph", wagtail.core.blocks.RichTextBlock()),
                            (
                                "left_image_with_text",
                                wagtail.core.blocks.StructBlock(
                                    [
                                        (
                                            "image",
                                            wagtail.images.blocks.ImageChooserBlock(),
                                        ),
                                        ("title", wagtail.core.blocks.CharBlock()),
                                        (
                                            "text",
                                            wagtail.core.blocks.RichTextBlock(
                                                features=["bold", "italic"]
                                            ),
                                        ),
                                    ]
                                ),
                            ),
                            (
                                "accordion",
                                wagtail.core.blocks.StructBlock(
                                    [
                                        ("title", wagtail.core.blocks.CharBlock()),
                                        (
                                            "text",
                                            wagtail.core.blocks.RichTextBlock(
                                                features=["bold", "italic", "link"]
                                            ),
                                        ),
                                        (
                                            "show_numbering",
                                            wagtail.core.blocks.BooleanBlock(
                                                help_text="Controls whether to show numbers next to the accordion items.",
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "items",
                                            wagtail.core.blocks.ListBlock(
                                                wagtail.core.blocks.StructBlock(
                                                    [
                                                        (
                                                            "title",
                                                            wagtail.core.blocks.CharBlock(),
                                                        ),
                                                        (
                                                            "text",
                                                            wagtail.core.blocks.TextBlock(),
                                                        ),
                                                    ],
                                                    icon="pilcrow",
                                                )
                                            ),
                                        ),
                                    ]
                                ),
                            ),
                            (
                                "text_with_image_stack",
                                wagtail.core.blocks.StructBlock(
                                    [
                                        ("title", wagtail.core.blocks.CharBlock()),
                                        (
                                            "text",
                                            wagtail.core.blocks.RichTextBlock(
                                                features=["bold", "italic", "link"]
                                            ),
                                        ),
                                        (
                                            "images",
                                            wagtail.core.blocks.ListBlock(
                                                wagtail.images.blocks.ImageChooserBlock()
                                            ),
                                        ),
                                    ]
                                ),
                            ),
                        ]
                    ),
                ),
                (
                    "listing_image",
                    models.ForeignKey(
                        blank=True,
                        help_text="Choose the image you wish to be displayed when this page appears in listings",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="images.customimage",
                    ),
                ),
                (
                    "social_image",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="images.customimage",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("wagtailcore.page", models.Model),
        ),
        migrations.CreateModel(
            name="GuideHubPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                ("social_text", models.CharField(blank=True, max_length=255)),
                (
                    "listing_title",
                    models.CharField(
                        blank=True,
                        help_text="Override the page title used when this page appears in listings",
                        max_length=255,
                    ),
                ),
                (
                    "listing_summary",
                    models.CharField(
                        blank=True,
                        help_text="The text summary used when this page appears in listings. It's also used as the description for search engines if the 'Meta description' field above is not defined.",
                        max_length=255,
                    ),
                ),
                ("introduction", models.TextField(blank=True)),
                (
                    "listing_image",
                    models.ForeignKey(
                        blank=True,
                        help_text="Choose the image you wish to be displayed when this page appears in listings",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="images.customimage",
                    ),
                ),
                (
                    "social_image",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="images.customimage",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("wagtailcore.page", models.Model),
        ),
    ]
