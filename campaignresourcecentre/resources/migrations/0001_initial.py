# Generated by Django 3.1.8 on 2021-04-19 14:17

from django.db import migrations, models
import django.db.models.deletion
import modelcluster.fields
import wagtail.core.fields


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("images", "0002_customimage_file_hash"),
        ("wagtailcore", "0060_fix_workflow_unique_constraint"),
        ("documents", "0003_customdocument_file_hash"),
    ]

    operations = [
        migrations.CreateModel(
            name="ResourcePage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                ("social_text", models.CharField(blank=True, max_length=255)),
                (
                    "listing_title",
                    models.CharField(
                        blank=True,
                        help_text="Override the page title used when this page appears in listings",
                        max_length=255,
                    ),
                ),
                (
                    "listing_summary",
                    models.CharField(
                        blank=True,
                        help_text="The text summary used when this page appears in listings. It's also used as the description for search engines if the 'Meta description' field above is not defined.",
                        max_length=255,
                    ),
                ),
                ("description", wagtail.core.fields.RichTextField()),
                (
                    "permission_role",
                    models.CharField(
                        choices=[
                            ("all", "All"),
                            ("standard", "Standard"),
                            ("uber", "Uber"),
                        ],
                        default="all",
                        max_length=10,
                    ),
                ),
                (
                    "listing_image",
                    models.ForeignKey(
                        blank=True,
                        help_text="Choose the image you wish to be displayed when this page appears in listings",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="images.customimage",
                    ),
                ),
                (
                    "social_image",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="images.customimage",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("wagtailcore.page", models.Model),
        ),
        migrations.CreateModel(
            name="ResourceItem",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                ("title", models.CharField(max_length=50)),
                (
                    "can_download",
                    models.BooleanField(
                        default=False,
                        help_text="Controls whether the resource can be downloaded from the site. A document must be choosen to enable this.",
                    ),
                ),
                (
                    "can_order",
                    models.BooleanField(
                        default=False,
                        help_text="Controls whether physical copies of the resource can be ordered through the site.",
                    ),
                ),
                (
                    "sku",
                    models.CharField(
                        blank=True,
                        help_text="The stock control unit code for ordering physical copies of the resource. Required if 'Can Order' is checked.",
                        max_length=50,
                    ),
                ),
                (
                    "maximum_order_quantity",
                    models.PositiveSmallIntegerField(
                        blank=True,
                        help_text="The maximum number of physical copies that can be ordered through the site. Required if 'Can Order' is checked.",
                        null=True,
                    ),
                ),
                (
                    "document",
                    models.ForeignKey(
                        blank=True,
                        help_text="Choose the relevant file from the Wagtail document library.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="documents.customdocument",
                    ),
                ),
                (
                    "image",
                    models.ForeignKey(
                        help_text="Choose an image to display for the resource.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="images.customimage",
                    ),
                ),
                (
                    "resource_page",
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="resource_items",
                        to="resources.resourcepage",
                    ),
                ),
            ],
            options={
                "ordering": ["sort_order"],
                "abstract": False,
            },
        ),
    ]
