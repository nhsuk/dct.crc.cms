schedules:
- cron: "0 12 * * 0"
  displayName: Weekly SonarQube build
  branches:
    include:
    - 'review/*'
    - 'main'
  always: true

pool:
  vmImage: ubuntu-latest

- jobs:
  - job: SonarQube analysis
    steps:
    - task: Docker@2
      inputs:
        containerRegistry: 'nhsuk acr-dct.campaign-resource-centre-v3'
        command: 'login'
    # Run CMS Test Coverage using pytest
    - script: |
        docker-compose -f ./docker-compose-test-coverage.yml up --build --force-recreate
      displayName: 'Run Coverage Test'
      enabled: true
    # Publish the test coverage report
    #- task: PublishCodeCoverageResults@1
    #  inputs:
    #    codeCoverageTool: Cobertura
    #    summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/**/coverage.xml'
    #    reportDirectory: '$(System.DefaultWorkingDirectory)/**/htmlcov'
    #  displayName: 'Publish Test Report'
    #  enabled: true
    - task: SonarQubePrepare@5
      inputs:
        SonarQube: 'SonarQube'
        scannerMode: 'CLI'
        configMode: 'manual'
        cliProjectKey: 'DCT_Campaigns_Resource_Centre'
        cliProjectName: 'DCT_Campaigns_Resource_Centre'
        cliSources: '.'
        extraProperties: |
          sonar.exclusions = campaignresourcecentre/**/migrations/*, campaignresourcecentre/dependency-scan-results/dependency-check-report.html, campaignresourcecentre/utils/tests/test_models.py, campaignresourcecentre/paragon/tests.py, campaignresourcecentre/notifications/adapters.py
          sonar.python.coverage.reportPaths = /home/vsts/work/1/s/docker/coverage.xml
    - task: dependency-check-build-task@6
      inputs:
        projectName: 'dct-campaign-resource-centre'
        reportsDirectory: '$(System.DefaultWorkingDirectory)/campaignresourcecentre/dependency-scan-results'
        scanPath: '$(Build.SourcesDirectory)'
        format: "JUNIT"
        additionalArguments: --format "HTML"
    - task: PublishTestResults@2
      inputs:
        testResultsFormat: 'JUnit'
        testResultsFiles: '$(System.DefaultWorkingDirectory)/campaignresourcecentre/dependency-scan-results/*junit.xml'
        testRunTitle: 'Dependency check'
        searchFolder: '$(Common.TestResultsDirectory)'
    - task: SonarQubeAnalyze@5

  - job: Post SonarQube PR review
    dependsOn: SonarQube analysis
    condition: and(startsWith(variables['Build.SourceBranch'], 'refs/pull/'), endsWith(variables['Build.SourceBranch'],'/head') )
    steps:
      - bash: |
          
        displayName: 'Set PR ID'
        
          