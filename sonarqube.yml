schedules:
- cron: "0 12 * * 0"
  displayName: Weekly SonarQube build
  branches:
    include:
    - 'review/*'
    - 'main'
  always: true

pool:
  vmImage: ubuntu-latest

jobs:
  - job: SonarQube_analysis
    steps:
    - template: azure-pipeline-templates/test.yml
    - task: SonarQubePrepare@5
      inputs:
        SonarQube: 'SonarQube'
        scannerMode: 'CLI'
        configMode: 'manual'
        cliProjectKey: 'DCT_Campaigns_Resource_Centre'
        cliProjectName: 'DCT_Campaigns_Resource_Centre'
        cliSources: '.'
        extraProperties: |
          sonar.exclusions = campaignresourcecentre/**/migrations/*, campaignresourcecentre/dependency-scan-results/*, campaignresourcecentre/utils/tests/test_models.py, campaignresourcecentre/paragon/tests.py, campaignresourcecentre/notifications/adapters.py, FrontEndTests/**/*.py
          sonar.python.coverage.reportPaths = /home/vsts/work/1/s/docker/coverage.xml
    - task: SonarQubeAnalyze@5

  - job: run_hosted_OWASP_Dependency_Check
    steps:
    - task: DownloadPipelineArtifact@2
      displayName: Download OWASP artifact
      inputs:
        buildType: "specific"
        project: "nhsuk.utilities"
        definition: "[schedule]-owasp-dependency-check-update"
        buildVersionToDownload: "latestFromBranch"
        branchName: refs/heads/main
        artifactName: "owasp"
        targetPath: "$(Pipeline.Workspace)/owasp"
        allowPartiallySucceededBuilds: true
    - task: Bash@3
      displayName: Run OWASP Dependency Check
      condition: and(succeeded(),eq(variables['DisableOwaspDependencyCheck'],false))
      inputs:
        workingDirectory: $(Pipeline.Workspace)/owasp
        filePath: $(Pipeline.Workspace)/owasp/run_owasp_scanner.sh
        arguments: '--scan "$(System.DefaultWorkingDirectory)" --failOnCVSS "$(OWASP.Fail.Score)" --project "$(Build.Repository.Name)" --out "$(System.DefaultWorkingDirectory)/dependency-scan-results" --format HTML --format JUNIT --format JSON'
    - task: PublishTestResults@2
      displayName: "Publish OWASP dependency check results"
      condition: and(succeededOrFailed(),eq(variables['DisableOwaspDependencyCheck'],false))
      inputs:
        testRunner: JUnit
        testResultsFiles: $(System.DefaultWorkingDirectory)/dependency-scan-results/dependency-check-junit.xml"
        testRunTitle: "OWASP Dependency check"

