parameters:
  - name: env
    type: string
  - name: environment
    type: string
  - name: azureSubscription
    type: string
  - name: dryRun
    type: boolean

steps:
  - checkout: none
  - task: DownloadPipelineArtifact@2
    displayName: Download production blobs
    inputs:
      artifactName: production.log
      targetPath: $(System.DefaultWorkingDirectory)

  - task: AzureKeyVault@2
    displayName:
    inputs:
      azureSubscription: dct-production-vault-uks-dct.campaign-resource-centre-v3
      KeyVaultName: dct-crc-v3-vlt-prod-uks
      SecretsFilter: storageAccountKey
      RunAsPreJob: false

  - task: AzureCLI@2
    displayName: Get ${{ parameters.environment }} diff
    inputs:
      azureSubscription: ${{ parameters.azureSubscription }}
      scriptType: bash
      scriptLocation: inlineScript
      inlineScript: |
        set -ex
        ACCOUNT_KEY=$(az storage account keys list \
          --account-name ${ACCOUNT} \
          --query "[0].value" \
          --output tsv)
        az storage blob list \
          --account-key $ACCOUNT_KEY \
          --account-name $ACCOUNT \
          --container-name $CONTAINER \
          --num-results 50000 \
          --only-show-errors \
          --query '[].name' \
          --output tsv \
        > ${{ parameters.environment }}.log  2>&1
        comm -23 production.log ${{ parameters.environment }}.log > production_to_${{ parameters.environment }}.log
    env:
      ACCOUNT: campaignsstrg${{ parameters.env }}uks
      CONTAINER: campaign-resource-centre-v3-${{ parameters.environment }}

  - task: PublishPipelineArtifact@1
    displayName: Publish ${{ parameters.environment }} blobs
    inputs:
      targetPath: ./${{ parameters.environment }}.log
      artifactName: ${{ parameters.environment }}.log

  - task: PublishPipelineArtifact@1
    displayName: Publish ${{ parameters.environment }} diff
    inputs:
      targetPath: ./production_to_${{ parameters.environment }}.log
      artifactName: production_to_${{ parameters.environment }}.log

  - bash: |
      echo "##vso[task.logissue type=warning;]Running in dryrun mode"
      echo "##vso[task.complete result=SucceededWithIssues;]"
    condition: ${{ eq(parameters.dryRun, true) }}
    displayName: Dry Run

  - task: AzureCLI@2
    condition: ${{ ne(parameters.dryRun, true) }}
    displayName: Upload ${{ parameters.environment }} diff
    inputs:
      azureSubscription: ${{ parameters.azureSubscription }}
      scriptType: bash
      scriptLocation: inlineScript
      inlineScript: |
        set -ex
        ACCOUNT_KEY=$(az storage account keys list \
          --account-name ${ACCOUNT} \
          --query "[0].value" \
          --output tsv)
        while read blob; do
          az storage blob copy start \
            --source-account-name $PROD_ACCOUNT \
            --source-account-key $PROD_ACCOUNT_KEY \
            --source-container $PROD_CONTAINER \
            --source-blob "$blob" \
            --account-name $ACCOUNT \
            --account-key $ACCOUNT_KEY \
            --destination-container $CONTAINER \
            --destination-blob "$blob" \
            --only-show-errors
        done <production_to_${{ parameters.environment }}.log
    env:
      ACCOUNT: campaignsstrg${{ parameters.env }}uks
      CONTAINER: campaign-resource-centre-v3-${{ parameters.environment }}
      PROD_ACCOUNT_KEY: $(storageAccountKey)
      PROD_ACCOUNT: campaignscrcv3produks
      PROD_CONTAINER: campaign-resource-centre-v3-production
