steps:
- task: AzureCLI@2
  inputs:
    azureSubscription: ${{parameters.azureStorageSubscription}}
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      set -e
      docker run \
      -e PGHOST="$(DBHost)" \
      -e PGPASSWORD="$(DBPass)" \
      -e PGUSER="$(DBUser)" \
      -v $(pwd)/psql_commands_scripts/:/psql_commands_scripts/ \
      postgres:11 \
      psql -d "$(DBName)" -f "/psql_commands_scripts/drop_user_constraints.csv"
  displayName: 'Drop user based constraints'

- task: AzureCLI@2
  inputs:
    azureSubscription: ${{parameters.azureStorageSubscription}}
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      set -e
      docker run \
      -e PGHOST="$(DBHost)" \
      -e PGPASSWORD="$(DBPass)" \
      -e PGUSER="$(DBUser)" \
      -v $(pwd)/psql_commands_scripts/:/psql_commands_scripts/ \
      postgres:11 \
      psql -d "$(DBName)" -f "/psql_commands_scripts/add_modified_user_constraints.csv"
  displayName: 'Add modified user based constraints'

- task: AzureCLI@2
  inputs:
    azureSubscription: ${{parameters.azureStorageSubscription}}
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      set -e
      docker run \
      -e PGHOST="$(DBHost)" \
      -e PGPASSWORD="$(DBPass)" \
      -e PGUSER="$(DBUser)" \
      postgres:11 \
      psql -d "$(DBName)" -c "DELETE FROM users_user"
  displayName: 'Delete prod users'

- task: AzureCLI@2
  inputs:
    azureSubscription: ${{parameters.azureStorageSubscription}}
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      set -e
      docker run \
      -e PGHOST="$(DBHost)" \
      -e PGPASSWORD="$(DBPass)" \
      -e PGUSER="$(DBUser)" \
      -v $(pwd)/psql_commands_scripts/:/psql_commands_scripts/ \
      postgres:11 \
      psql -d "$(DBName)" -f "/psql_commands_scripts/drop_user_constraints.csv"
  displayName: 'Drop user based constraints again'

- task: AzureCLI@2
  inputs:
    azureSubscription: ${{parameters.azureStorageSubscription}}
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      set -e
      docker run \
      -e PGHOST="$(DBHost)" \
      -e PGPASSWORD="$(DBPass)" \
      -e PGUSER="$(DBUser)" \
      -v $(pwd)/${{parameters.dumpPrefix}}-db-dump.dump:/${{parameters.dumpPrefix}}-db.dump \
      postgres:11 \
      pg_restore --no-acl --no-owner --data-only -d "$(DBName)" -t "users_user" -t "otp_totp_totpdevice" -t "users_user_groups" -t "users_user_user_permissions" -t "wagtailusers_userprofile" ${{parameters.dumpPrefix}}-db.dump 
  displayName: 'Restore ${{parameters.dumpPrefix}} users to target database'

- task: AzureCLI@2
  inputs:
    azureSubscription: ${{parameters.azureStorageSubscription}}
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      set -e
      docker run \
      -e PGHOST="$(DBHost)" \
      -e PGPASSWORD="$(DBPass)" \
      -e PGUSER="$(DBUser)" \
      -v $(pwd)/psql_commands_scripts/:/psql_commands_scripts/ \
      postgres:11 \
      psql -d "$(DBName)" -f "/psql_commands_scripts/add_original_user_constraints.csv"
  displayName: 'Re-add original user based constraints'
