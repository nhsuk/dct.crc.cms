steps:
- task: AzureKeyVault@2
  displayName: 'Azure Key Vault: ${{parameters.VaultId}}'
  inputs:
    azureSubscription: ${{parameters.azureVaultSubscription}}
    KeyVaultName: ${{parameters.VaultId}}
    SecretsFilter: DBPass, DBName, DBHost, DBUser

- task: AzureKeyVault@2
  displayName: 'Azure Key Vault: Admin'
  inputs:
    azureSubscription: dct-crccms-${{parameters.env}}
    KeyVaultName: dct-crccms-kv2-${{parameters.env}}-uks
    SecretsFilter: postgresqlAdminUser, postgresqlAdminPassword

- template: ./db-sync-download-dump.yaml
  parameters:
    user: $(DBUser)
    password: $(DBPass)
    dumpPrefix: ${{ parameters.environment }}_users
    usersOnly: True

- template: ./db-sync-restore-db.yaml
  parameters:
    dumpPrefix: prod
    useArtifact: true

- template: ./db-sync-restore-users.yaml
  parameters:
    dumpPrefix: ${{ parameters.environment }}_users

- template: ./db-sync-download-dump.yaml
  parameters:
    user: $(postgresqlAdminUser)
    password: $(postgresqlAdminPassword)
    dumpPrefix: ${{ parameters.environment }}

- template: ./db-sync-upload-blob.yaml
  parameters:
    azureStorageSubscription: ${{ parameters.azureStorageSubscription}}
    StorageAccountNameDbDump: $(StorageAccountNameDbDump)
    BlobStorageKeyDbDump: $(BlobStorageKeyDbDump)
    BlobStorageContainerNameDbDump: $(BlobStorageContainerNameDbDump)
    dumpPrefix: ${{ parameters.environment }}
