steps:
- task: AzureCLI@2
  inputs:
    azureSubscription: ${{parameters.azureStorageSubscription}}
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      set -e
      docker run \
      -e PGHOST="$(DBHost)" \
      -e PGPASSWORD="$(DBPass)" \
      -e PGUSER="$(DBUser)" \
      postgres:16 \
      psql -d "$(DBName)" \
      -c "SELECT pg_terminate_backend(pg_stat_activity.pid) FROM pg_stat_activity WHERE pg_stat_activity.datname = '$(DBName)' AND pid <> pg_backend_pid();"
  displayName: 'End connections to target database'

- task: AzureCLI@2
  inputs:
    azureSubscription: ${{parameters.azureStorageSubscription}}
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      set -e
      docker run \
      -e PGHOST="$(DBHost)" \
      -e PGPASSWORD="$(postgresqlAdminPassword)" \
      -e PGUSER="$(postgresqlAdminUser)" \
      postgres:16 \
      dropdb --if-exists $(DBName)
  displayName: 'Delete target database'

- task: AzureCLI@2
  inputs:
    azureSubscription: ${{parameters.azureStorageSubscription}}
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      set -e
      docker run \
      -e PGHOST="$(DBHost)" \
      -e PGPASSWORD="$(AdminPassword)" \
      -e PGUSER="$(AdminUser)" \
      postgres:16 \
      createdb --owner=$(DBUser) $(DBName)
  displayName: 'Recreate target database'

- task: DownloadPipelineArtifact@2
  condition: ${{ eq(parameters.useArtifact, True) }}
  inputs:
    artifact: '${{parameters.dumpPrefix}}-db.dump'
    path: $(Build.SourcesDirectory)

- task: AzureCLI@2
  inputs:
    azureSubscription: ${{parameters.azureStorageSubscription}}
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      set -e
      docker run \
      -e PGHOST="$(DBHost)" \
      -e PGPASSWORD="$(DBPass)" \
      -e PGUSER="$(DBUser)" \
      -v $(pwd)/${{parameters.dumpPrefix}}-db-dump.dump:/${{parameters.dumpPrefix}}-db.dump \
      postgres:16 \
      pg_restore --no-acl --no-owner -d "$(DBName)" ${{parameters.dumpPrefix}}-db.dump
  displayName: 'Copy ${{parameters.dumpPrefix}} to target database'
