steps:
- task: AzureKeyVault@1
  displayName: 'Azure Key Vault: ${{parameters.VaultId}}'
  inputs:
    azureSubscription: ${{parameters.azureVaultSubscription}}
    KeyVaultName: ${{parameters.VaultId}}
    SecretsFilter: DBPass, DBName, DBHost, DBUser

- task: AzureCLI@2
  inputs:
    azureSubscription: ${{parameters.azureStorageSubscription}}
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      mkdir psql_commands_scripts
      set -e
      docker run \
      -e PGHOST="$(DBHost)" \
      -e PGPASSWORD="$(DBPass)" \
      -e PGUSER="$(DBUser)" \
      -v $(pwd)/psql_commands_scripts/:/psql_commands_scripts/ \
      postgres:11 \
      psql -d "$(DBName)" \
      -c "\copy (SELECT 'ALTER TABLE '||constrained_table||' DROP CONSTRAINT '||constraint_name||';'
        FROM (
            SELECT
                relname AS constrained_table,
                conname AS constraint_name
            FROM pg_constraint
            INNER JOIN pg_class ON conrelid=pg_class.oid
            WHERE contype='f'
                AND confrelid = 'users_user'::regclass)
        AS drop_constraints)
        to '/psql_commands_scripts/drop_user_constraints.csv' csv;"
  displayName: 'Make drop user constraints script'

- task: AzureCLI@2
  inputs:
    azureSubscription: ${{parameters.azureStorageSubscription}}
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      mkdir psql_commands_scripts
      set -e
      docker run \
      -e PGHOST="$(DBHost)" \
      -e PGPASSWORD="$(DBPass)" \
      -e PGUSER="$(DBUser)" \
      -v $(pwd)/psql_commands_scripts/:/psql_commands_scripts/ \
      postgres:11 \
      psql -d "$(DBName)" \
      -c "\copy (SELECT 'ALTER TABLE '||constrained_table||' ADD CONSTRAINT '||constraint_name||' FOREIGN KEY ('||fk_column||') REFERENCES users_user('||ref_column||') '||on_delete||' '||def||';'
        FROM (
            SELECT
                relname AS constrained_table,
                conname AS constraint_name,
                (SELECT column_name
                    FROM information_schema.columns
                    WHERE table_name=relname
                        AND ordinal_position=conkey[1]) AS fk_column,
                (SELECT column_name
                    FROM information_schema.columns
                    WHERE table_name=relname
                        AND ordinal_position=confkey[1]) AS ref_column,
                (SELECT
                    CASE WHEN is_nullable = 'NO' THEN 'ON DELETE CASCADE'
                    ELSE 'ON DELETE SET NULL'
                    END
                    FROM information_schema.columns
                    WHERE table_name=relname
                        AND ordinal_position=conkey[1]) AS on_delete,
                CASE WHEN condeferrable AND condeferred THEN 'DEFERRABLE INITIALLY DEFERRED'
                    WHEN condeferrable AND NOT condeferred THEN 'DEFERRABLE INITIALLY IMMEDIATE'
                    ELSE 'NOT DEFERRABLE'
                    END AS def
            FROM pg_constraint
            INNER JOIN pg_class ON conrelid=pg_class.oid
            WHERE contype='f'
                AND confrelid = 'users_user'::regclass)
        AS add_constraints)
        to '/psql_commands_scripts/add_modified_user_constraints.csv' csv;"
  displayName: 'Make add modified constraints script'

- task: AzureCLI@2
  inputs:
    azureSubscription: ${{parameters.azureStorageSubscription}}
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      mkdir psql_commands_scripts
      set -e
      docker run \
      -e PGHOST="$(DBHost)" \
      -e PGPASSWORD="$(DBPass)" \
      -e PGUSER="$(DBUser)" \
      -v $(pwd)/psql_commands_scripts/:/psql_commands_scripts/ \
      postgres:11 \
      psql -d "$(DBName)" \
      -c "\copy (SELECT indexdef FROM pg_indexes
        WHERE tablename = 'users_user'
          OR tablename = 'otp_totp_totpdevice'
          OR tablename = 'users_user_groups'
          OR tablename = 'users_user_user_permissions'
          OR tablename = 'wagtailusers_userprofile')
        to '/psql_commands_scripts/add_original_user_indexes.csv' csv;"
  displayName: 'Make add original indexes script'

- task: AzureCLI@2
  inputs:
    azureSubscription: ${{parameters.azureStorageSubscription}}
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      mkdir psql_commands_scripts
      set -e
      docker run \
      -e PGHOST="$(DBHost)" \
      -e PGPASSWORD="$(DBPass)" \
      -e PGUSER="$(DBUser)" \
      -v $(pwd)/psql_commands_scripts/:/psql_commands_scripts/ \
      postgres:11 \
      psql -d "$(DBName)" \
      -c "\copy (SELECT 'ALTER TABLE '||constrained_table||' ADD CONSTRAINT '||constraint_name||' FOREIGN KEY ('||fk_column||') REFERENCES users_user('||ref_column||') '||def||';'
        FROM (
            SELECT
                relname AS constrained_table,
                conname AS constraint_name,
                (SELECT column_name
                    FROM information_schema.columns
                    WHERE table_name=relname
                        AND ordinal_position=conkey[1]) AS fk_column,
                (SELECT column_name
                    FROM information_schema.columns
                    WHERE table_name=relname
                        AND ordinal_position=confkey[1]) AS ref_column,
                CASE WHEN condeferrable AND condeferred THEN 'DEFERRABLE INITIALLY DEFERRED'
                    WHEN condeferrable AND NOT condeferred THEN 'DEFERRABLE INITIALLY IMMEDIATE'
                    ELSE 'NOT DEFERRABLE'
                    END AS def
            FROM pg_constraint
            INNER JOIN pg_class ON conrelid=pg_class.oid
            WHERE contype='f'
                AND confrelid = 'users_user'::regclass)
        AS add_constraints)
        to '/psql_commands_scripts/add_original_user_constraints.csv' csv;"
  displayName: 'Make add original constraints script'

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: $(System.DefaultWorkingDirectory)/psql_commands_scripts/
    artifactName: 'psql_commands_scripts'