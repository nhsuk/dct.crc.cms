steps:
  - task: Docker@2
    displayName: 'Docker Build'
    inputs:
      containerRegistry: 'nhsuk acr-dct.campaign-resource-centre-v3'
      dockerfile: '$(Build.SourcesDirectory)/Dockerfile'
      repository: '$(repository)'
      command: 'build'
      arguments: '--build-arg BUILD_ENV="production"'
      tags: |
        ${{ parameters.tag }}
  - task: Docker@2
    displayName: 'Docker Push'
    condition: ne('${{ parameters.dryRun }}', 'True')
    inputs:
      containerRegistry: 'nhsuk acr-dct.campaign-resource-centre-v3'
      dockerfile: '$(Build.SourcesDirectory)/Dockerfile'
      repository: '$(repository)'
      command: 'push'
      tags: |
        ${{ parameters.tag }}
  - bash: |
      sudo apt-get install wget apt-transport-https gnupg
      wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | gpg --dearmor | sudo tee /usr/share/keyrings/trivy.gpg > /dev/null
      echo "deb [signed-by=/usr/share/keyrings/trivy.gpg] https://aquasecurity.github.io/trivy-repo/deb generic main" | sudo tee -a /etc/apt/sources.list.d/trivy.list
      sudo apt-get update
      sudo apt-get install trivy

      trivy image --severity HIGH,CRITICAL  --output $(Build.ArtifactStagingDirectory)/${{ parameters.tag }}-scan.txt --scanners vuln nhsuk.azurecr.io/$(repository):${{ parameters.tag }}
    displayName: 'trivy - bash'
    condition: ne('${{ parameters.dryRun }}', 'True')
  # - task: trivy@1
  #   displayName: 'trivy - task'
  #   condition: and(succeededOrFailed(), ne('${{ parameters.dryRun }}', 'True'))
  #   inputs:
  #     image: nhsuk.azurecr.io/$(repository):${{ parameters.tag }}
  #     # Needed to access private repo 
  #     loginDockerConfig: true
  #     severities: HIGH,CRITICAL
