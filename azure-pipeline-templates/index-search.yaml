
trigger: none

pool:
  vmImage: 'ubuntu-latest'

parameters:
  - name: dev
    type: boolean
    default: false
  - name: staging
    type: boolean
    default: false
  - name: production
    type: boolean
    default: false

  - name: environmentUrl
    type: string

jobs:
  - job: IndexDev
    displayName: 'Index Dev'
    condition: eq('${{ parameters.dev }}', true)
    steps:
      - bash: |
          echo "Index Dev"
          FULL_URL="${{ parameters.environmentUrl }}/crc-admin/update_index"
          
          echo "Full URL: $FULL_URL"
          # TODO: add authentication
          curl -X POST $FULL_URL

      # - task: DockerCompose@0
      #   displayName: 'Build and run Docker Compose'z
      #   inputs:
      #     action: 'Run a specific service'
      #     serviceName: "web"
      #     containerCommand: "./manage.py update_index"

      # - template: templates/index.yaml
      #   parameters:
      #     searchServiceAdminApiKey: $(searchServiceAdminApiKeyDev)
      #     indexerName: "campaignscrcv3-1-0-b-dev"
      #     searchService: "campaigns-search-dev-uks"

  # - job: IndexStaging
  #   displayName: 'Index staging'
  #   condition: eq('${{ parameters.staging }}', 'true')
  #   steps:
  #   - template: templates/index.yaml
  #     parameters:
  #       searchServiceAdminApiKey: $(searchServiceAdminApiKeyStag)
  #       indexerName: "campaignscrcv3-1-0-b-stag"
  #       searchService: "campaigns-search-stag-uks"

  # - job: IndexProduction
  #   displayName: 'Index Production'
  #   condition: eq('${{ parameters.Production }}', 'true')
  #   steps:
  #   - template: templates/index.yaml
  #     parameters:
  #       searchServiceAdminApiKey: $(searchServiceAdminApiKeyProd)
  #       indexerName: "campaignscrcv3-1-0-b-prod"
  #       searchService: "campaigns-search-prod-uks"