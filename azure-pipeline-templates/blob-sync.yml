pool:
  vmImage: "ubuntu-latest"

trigger: none
pr: none

parameters:
  - name: dryRun
    displayName: Dry Run
    type: boolean
    default: false
  - name: review
    displayName: Copy to Review
    type: boolean
    default: false
  - name: integration
    displayName: Copy to Integration
    type: boolean
    default: false
  - name: staging
    displayName: Copy to Staging
    type: boolean
    default: false

stages:
  - stage: production
    displayName: List production blobs
    jobs:
      - job: Production
        steps:
          - checkout: none
          - task: AzureKeyVault@2
            displayName:
            inputs:
              azureSubscription: dct-production-vault-uks-dct.campaign-resource-centre-v3
              KeyVaultName: dct-crc-v3-vlt-prod-uks
              SecretsFilter: storageAccountKey
              RunAsPreJob: false
          - task: AzureCLI@2
            name: QueryProd
            inputs:
              azureSubscription: campaigns-apps-rg-dev-uks.campaign-resource-centre-v3
              scriptType: bash
              scriptLocation: inlineScript
              inlineScript: |
                az storage blob list \
                  --account-key $ACCOUNT_KEY \
                  --account-name $ACCOUNT \
                  --container-name $CONTAINER \
                  --num-results 50000 \
                  --only-show-errors \
                  --query '[].name' \
                  --output tsv \
                > production.log  2>&1
            env:
              ACCOUNT_KEY: $(storageAccountKey)
              ACCOUNT: campaignscrcv3produks
              CONTAINER: campaign-resource-centre-v3-production
          - task: PublishPipelineArtifact@1
            displayName: Publish production blobs
            inputs:
              targetPath: ./production.log
              artifactName: production.log

  - stage: staging
    dependsOn: production
    condition: ${{ parameters.staging }}
    displayName: Update staging blobs
    jobs:
      - job: Staging
        steps:
          - template: templates/blob-sync-steps.yml
            parameters:
              env: stag
              environment: staging
              dryRun: ${{ parameters.dryRun }}

  - stage: integration
    dependsOn: production
    condition: ${{ parameters.integration }}
    displayName: Update integration blobs
    jobs:
      - job: Integration
        steps:
          - template: templates/blob-sync-steps.yml
            parameters:
              env: int
              environment: integration
              dryRun: ${{ parameters.dryRun }}
