name: $(BuildId)

trigger:
  batch: true
  branches:
    include:
    - 'review/*'
    - 'refs/tags/*'
    - 'main'
  paths:
    include:
    - 'terraform'

variables: 
  - name: ARTIFACT_NAME
    value: drop
  - name: KEY_VAULT_RESOURCE_GROUP_PREFIX
    value: nhsuk-dct-vault-rg
  - name: KEY_VAULT_NAME_PREFIX
    value: dct-crc-v3-vlt
#  - group: Common

stages:
  - stage: Build
    jobs:
      - job: Publish
        pool:
          vmImage: windows-2022
        steps:
          - task: CopyFiles@2
            displayName: 'Copy all terraform files to artifacts'
            inputs:
              SourceFolder: terraform/src/
              TargetFolder: '$(Build.ArtifactStagingDirectory)/terraform'
              CleanTargetFolder: true
              OverWrite: true

          - task: PublishBuildArtifacts@1
            displayName: 'Publish Artifact'
            inputs:
              PathtoPublish: '$(Build.ArtifactStagingDirectory)'
              ArtifactName: $(ARTIFACT_NAME)

  - stage: terraformReview
    displayName: 'Terraform Review Env'
    dependsOn: Build
    condition: startsWith(variables['Build.SourceBranch'], 'refs/heads/review/')
    pool:
      vmImage: windows-2022
    variables:
      - name: ARTIFACT_PATH
        value: '$(Pipeline.Workspace)\$(ARTIFACT_NAME)\terraform\common'
      - template: ./templates/release-variables.yml
        parameters:
          releaseEnvironment: 'dev'
          location: 'uks'
      - name: ENVIRONMENT
        value: 'development'
      - name: KEY_VAULT_RESOURCE_GROUP
        value: $(KEY_VAULT_RESOURCE_GROUP_PREFIX)-dev-uks
      - name: KEY_VAULT_NAME
        value: $(KEY_VAULT_NAME_PREFIX)-rev-uks
      - name: PUBLISHING_ENDPOINT
        value: 'https://crc-v3-review-cv-1206-terraform-scheduling.nhswebsite-dev.nhs.uk/crc-admin/pub'
    jobs:
      - deployment: 'terraformDev'
        displayName: 'Terraform Review'
        condition: startsWith(variables['Build.SourceBranch'], 'refs/heads/review/')
        environment: ${{ variables.ENVIRONMENT }}
        strategy:
          runOnce:
            deploy:
              steps:
              - template: ./templates/deployment-steps.yml
                parameters:
                  artifactPath: ${{ variables.ARTIFACT_PATH }}
                  environment: ${{ variables.ENVIRONMENT }}
                  azureSubscription: ${{ variables.AZURE_SUBSCRIPTION }}
                  resourceGroup: ${{ variables.RESOURCE_GROUP }}
                  tfStorageAccount: ${{ variables.TF_STORAGE_ACCOUNT }}
                  keyVaultResourceGroup: ${{ variables.KEY_VAULT_RESOURCE_GROUP}}
                  keyVaultName: ${{ variables.KEY_VAULT_NAME}}
                  publishingEndpoint: ${{ variables.PUBLISHING_ENDPOINT}}
                  #alertingWebhoook: ${{ variables.CAMPAIGNS_MONITORING_WEBHOOK }}

  # - stage: terraformIntegration
  #   displayName: 'Terraform Integration Env'
  #   dependsOn: Build
  #   condition: eq(variables['Build.SourceBranch'], 'refs/heads/main')
  #   pool:
  #     vmImage: windows-2022
  #   variables:
  #     - name: ARTIFACT_PATH
  #       value: '$(Pipeline.Workspace)\$(ARTIFACT_NAME)\terraform\common'
  #     - template: ./templates/release-variables.yml
  #       parameters:
  #         releaseEnvironment: 'int'
  #         location: 'uks'
  #     - name: ENVIRONMENT
  #       value: 'integration'
  #     - name: KEY_VAULT_RESOURCE_GROUP
  #       value: $(KEY_VAULT_RESOURCE_GROUP_PREFIX)-dev-uks
  #     - name: KEY_VAULT_NAME
  #       value: $(KEY_VAULT_NAME_PREFIX)-int-uks
  #     - name: PUBLISHING_ENDPOINT
  #       value: 'https://crc-v3.nhswebsite-dev.nhs.uk/crc-admin/pub'
  #   jobs:
  #     - deployment: 'terraformInt'
  #       displayName: 'Terraform Integration'
  #       condition: eq(variables['Build.SourceBranch'], 'refs/heads/main')
  #       environment: ${{ variables.ENVIRONMENT }}
  #       strategy:
  #         runOnce:
  #           deploy:
  #             steps:
  #             - template: ./templates/deployment-steps.yml
  #               parameters:
  #                 artifactPath: ${{ variables.ARTIFACT_PATH }}
  #                 environment: ${{ variables.ENVIRONMENT }}
  #                 azureSubscription: ${{ variables.AZURE_SUBSCRIPTION }}
  #                 resourceGroup: ${{ variables.RESOURCE_GROUP }}
  #                 tfStorageAccount: ${{ variables.TF_STORAGE_ACCOUNT }}
  #                 keyVaultResourceGroup: ${{ variables.KEY_VAULT_RESOURCE_GROUP}}
  #                 keyVaultName: ${{ variables.KEY_VAULT_NAME}}
  #                 publishingEndpoint: ${{ variables.PUBLISHING_ENDPOINT}}
  #                 #alertingWebhoook: ${{ variables.CAMPAIGNS_MONITORING_WEBHOOK }}

  # - stage: terraformStaging
  #   displayName: 'Terraform Staging Env'
  #   dependsOn: Build
  #   condition: startsWith(variables['Build.SourceBranch'], 'refs/tags/')
  #   pool:
  #     vmImage: windows-2022
  #   variables:
  #     - name: ARTIFACT_PATH
  #       value: '$(Pipeline.Workspace)\$(ARTIFACT_NAME)\terraform\common'
  #     - template: ./templates/release-variables.yml
  #       parameters:
  #         releaseEnvironment: 'stag'
  #         location: 'uks'
  #     - name: ENVIRONMENT
  #       value: 'staging'
  #     - name: KEY_VAULT_RESOURCE_GROUP
  #       value: $(KEY_VAULT_RESOURCE_GROUP_PREFIX)-stag-uks
  #     - name: KEY_VAULT_NAME
  #       value: $(KEY_VAULT_NAME_PREFIX)-stag-uks
  #     - name: PUBLISHING_ENDPOINT
  #       value: 'https://staging.campaignresources.dhsc.gov.uk/crc-admin/pub'
  #   jobs:
  #     - deployment: 'terraformStag'
  #       displayName: 'Terraform Staging'
  #       condition: startsWith(variables['Build.SourceBranch'], 'refs/tags/')
  #       environment: ${{ variables.ENVIRONMENT }}
  #       strategy:
  #         runOnce:
  #           deploy:
  #             steps:
  #             - template: ./templates/deployment-steps.yml
  #               parameters:
  #                 artifactPath: ${{ variables.ARTIFACT_PATH }}
  #                 environment: ${{ variables.ENVIRONMENT }}
  #                 azureSubscription: ${{ variables.AZURE_SUBSCRIPTION }}
  #                 resourceGroup: ${{ variables.RESOURCE_GROUP }}
  #                 tfStorageAccount: ${{ variables.TF_STORAGE_ACCOUNT }}
  #                 keyVaultResourceGroup: ${{ variables.KEY_VAULT_RESOURCE_GROUP}}
  #                 keyVaultName: ${{ variables.KEY_VAULT_NAME}}
  #                 publishingEndpoint: ${{ variables.PUBLISHING_ENDPOINT}}
  #                 #alertingWebhoook: ${{ variables.CAMPAIGNS_MONITORING_WEBHOOK }}
  
  # - stage: terraformProduction
  #   displayName: 'Terraform Production Env'
  #   dependsOn: terraformStaging
  #   condition: startsWith(variables['Build.SourceBranch'], 'refs/tags/')
  #   pool:
  #     vmImage: windows-2022
  #   variables:
  #     - name: ARTIFACT_PATH
  #       value: '$(Pipeline.Workspace)\$(ARTIFACT_NAME)\terraform\common'
  #     - template: ./templates/release-variables.yml
  #       parameters:
  #         releaseEnvironment: 'prod'
  #         location: 'uks'
  #     - name: ENVIRONMENT
  #       value: 'production'
  #     - name: KEY_VAULT_RESOURCE_GROUP
  #       value: $(KEY_VAULT_RESOURCE_GROUP_PREFIX)-prod-uks
  #     - name: KEY_VAULT_NAME
  #       value: $(KEY_VAULT_NAME_PREFIX)-prod-uks
  #     - name: PUBLISHING_ENDPOINT
  #       value: 'https://campaignresources.dhsc.gov.uk/crc-admin/pub'
  #   jobs:
  #     - deployment: approval
  #       environment: ${{ variables.ENVIRONMENT }}
  #     - deployment: 'terraformProd'
  #       displayName: 'Terraform Production'
  #       condition: startsWith(variables['Build.SourceBranch'], 'refs/tags/')
  #       environment: ${{ variables.ENVIRONMENT }}
  #       strategy:
  #         runOnce:
  #           deploy:
  #             steps:
  #             - template: ./templates/deployment-steps.yml
  #               parameters:
  #                 artifactPath: ${{ variables.ARTIFACT_PATH }}
  #                 environment: ${{ variables.ENVIRONMENT }}
  #                 azureSubscription: ${{ variables.AZURE_SUBSCRIPTION }}
  #                 resourceGroup: ${{ variables.RESOURCE_GROUP }}
  #                 tfStorageAccount: ${{ variables.TF_STORAGE_ACCOUNT }}
  #                 keyVaultResourceGroup: ${{ variables.KEY_VAULT_RESOURCE_GROUP}}
  #                 keyVaultName: ${{ variables.KEY_VAULT_NAME}}
  #                 publishingEndpoint: ${{ variables.PUBLISHING_ENDPOINT}}
  #                 #alertingWebhoook: ${{ variables.CAMPAIGNS_MONITORING_WEBHOOK }}

  # - stage: terraformDR
  #   displayName: 'Terraform DR Env'
  #   dependsOn: terraformStaging
  #   condition: startsWith(variables['Build.SourceBranch'], 'refs/tags/')
  #   pool:
  #     vmImage: windows-2022
  #   variables:
  #     - name: ARTIFACT_PATH
  #       value: '$(Pipeline.Workspace)\$(ARTIFACT_NAME)\terraform\common'
  #     - template: ./templates/release-variables.yml
  #       parameters:
  #         releaseEnvironment: 'prod'
  #         location: 'ukw'
  #     - name: ENVIRONMENT
  #       value: 'production'
  #     - name: KEY_VAULT_RESOURCE_GROUP
  #       value: $(KEY_VAULT_RESOURCE_GROUP_PREFIX)-dr-ukw
  #     - name: KEY_VAULT_NAME
  #       value: $(KEY_VAULT_NAME_PREFIX)-dr-ukw
  #     - name: PUBLISHING_ENDPOINT
  #       value: 'https://campaignresources.dhsc.gov.uk/crc-admin/pub'
  #   jobs:
  #     - deployment: approval
  #       environment: ${{ variables.ENVIRONMENT }}
  #     - deployment: 'terraformDr'
  #       displayName: 'Terraform DR'
  #       condition: startsWith(variables['Build.SourceBranch'], 'refs/tags/')
  #       environment: ${{ variables.ENVIRONMENT }}
  #       strategy:
  #         runOnce:
  #           deploy:
  #             steps:
  #             - template: ./templates/deployment-steps.yml
  #               parameters:
  #                 artifactPath: ${{ variables.ARTIFACT_PATH }}
  #                 environment: ${{ variables.ENVIRONMENT }}
  #                 azureSubscription: ${{ variables.AZURE_SUBSCRIPTION }}
  #                 resourceGroup: ${{ variables.RESOURCE_GROUP }}
  #                 tfStorageAccount: ${{ variables.TF_STORAGE_ACCOUNT }}
  #                 keyVaultResourceGroup: ${{ variables.KEY_VAULT_RESOURCE_GROUP}}
  #                 keyVaultName: ${{ variables.KEY_VAULT_NAME}}
  #                 publishingEndpoint: ${{ variables.PUBLISHING_ENDPOINT}}
  #                 #alertingWebhoook: ${{ variables.CAMPAIGNS_MONITORING_WEBHOOK }}
